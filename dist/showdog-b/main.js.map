{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/firms/firms.component.css","webpack:///./src/app/firms/firms.component.html","webpack:///./src/app/firms/firms.component.ts","webpack:///./src/app/firms/firms.provider.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/registration/registration.provider.ts","webpack:///./src/app/services/auth.ts","webpack:///./src/app/show/show.component.css","webpack:///./src/app/show/show.component.html","webpack:///./src/app/show/show.component.ts","webpack:///./src/app/show/show.provider.ts","webpack:///./src/app/shows/shows.component.html","webpack:///./src/app/shows/shows.component.scss","webpack:///./src/app/shows/shows.component.ts","webpack:///./src/app/shows/shows.provider.ts","webpack:///./src/app/validators/date.ts","webpack:///./src/app/validators/lat.ts","webpack:///./src/app/validators/lon.ts","webpack:///./src/app/validators/matcher.ts","webpack:///./src/app/validators/url.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nimport { ShowsComponent }       from './shows/shows.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ShowComponent } from './show/show.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { FirmsComponent } from './firms/firms.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'show', component: ShowComponent },\r\n  { path: 'shows', component: ShowsComponent },\r\n  { path: 'firms', component: FirmsComponent },\r\n  { path: 'registration', component: RegistrationComponent },\r\n  { path: 'login', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \".menu{\\r\\n    width: 30vw;\\r\\n    position: fixed;\\r\\n    padding-bottom: 5px;\\r\\n    padding-right: 5px;\\r\\n}\\r\\n\\r\\n.menu-icon {\\r\\n    font-size: 40px!important;\\r\\n}\\r\\n\\r\\n.router-outlet{\\r\\n    padding-top:50px;\\r\\n    padding-left:10px;\\r\\n}\"","module.exports = \"\\r\\n<div class=\\\"menu\\\">\\r\\n    <button class=\\\"menu-button\\\"  mat-icon-button matTooltip=\\\"Menu\\\" [matMenuTriggerFor]=\\\"menu\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">menu</mat-icon>\\r\\n    </button>\\r\\n</div>\\r\\n<mat-menu #menu=\\\"matMenu\\\">\\r\\n  <button mat-menu-item *ngFor=\\\"let item of menuItems\\\" routerLink=\\\"{{item.routerLink}}\\\">{{item.title}}</button>\\r\\n  <div *ngIf=\\\"authService.afAuth.user | async as user; else showRegister\\\">\\r\\n        <button mat-menu-item routerLink=\\\"registration\\\">Register your bussiness</button>\\r\\n  </div>\\r\\n  \\r\\n  <div *ngIf=\\\"authService.afAuth.user | async as user; else showLogin\\\">\\r\\n      <button mat-menu-item (click)=\\\"logout()\\\" routerLink=\\\"login\\\">Logout</button>\\r\\n  </div> \\r\\n\\r\\n</mat-menu>\\r\\n\\r\\n<div class=\\\"router-outlet\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n<ng-template #showLogin>\\r\\n    <button  mat-menu-item routerLink=\\\"login\\\">Login</button>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #showRegister>\\r\\n    <div matTooltip=\\\"You have to be logged in if want to register you business.\\\">\\r\\n        <button mat-menu-item disabled>Register your bussiness</button>\\r\\n   </div>\\r\\n</ng-template>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router } from '../../node_modules/@angular/router';\r\nimport { AuthService } from './services/auth';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n\r\nexport class AppComponent {\r\n  title = 'Show Dog';\r\n\r\n  menuItems = [\r\n               {title: 'Dog Shows',  routerLink: 'shows'},\r\n               {title: 'Dog Related Businesses',  routerLink: 'firms'},\r\n              ];\r\n\r\n              constructor(public authService: AuthService) {\r\n              }\r\n              logout() {\r\n                this.authService.signOut();\r\n              }\r\n    public registrationInfo() {\r\n      if (this.authService.authenticated) {\r\n        return \"You have to be logged in if want to register you business.\";\r\n      }\r\n    }\r\n  \r\n  }\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { environment } from '../environments/environment';\r\nimport { ShowsComponent } from './shows/shows.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ShowsProvider } from './shows/shows.provider';\r\n\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { AuthService } from './services/auth';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule, MatSelectModule } from '@angular/material';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRadioModule} from '@angular/material/radio';\r\nimport { MatExpansionModule} from '@angular/material/expansion';\r\nimport { MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport { MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ShowComponent } from './show/show.component';\r\nimport { ShowProvider } from './show/show.provider';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { RegistrationProvider } from './registration/registration.provider';\r\nimport { FirmsComponent } from './firms/firms.component';\r\nimport { FirmsProvider } from './firms/firms.provider';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ShowsComponent,\r\n    ShowComponent,\r\n    LoginComponent,\r\n    ShowComponent,\r\n    RegistrationComponent,\r\n    FirmsComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: environment.googleMapConfig.apiKey\r\n    }),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatMenuModule,\r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSliderModule\r\n  ],\r\n  providers: [\r\n    ShowsProvider,\r\n    ShowProvider,\r\n    RegistrationProvider,\r\n    FirmsProvider,\r\n    AuthService,\r\n    AngularFireAuth,\r\n    AngularFireDatabase,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","module.exports = \"/* .lmapa {\\r\\n    position: relative;\\r\\n} */\\r\\n\\r\\n#lmapa { height: 80vh; }\\r\\n\\r\\n.container {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.lista {\\r\\n    height: 50vh!important;\\r\\n}\\r\\n\\r\\n.left {\\r\\n    float:left;\\r\\n    width: 50vw;\\r\\n    margin-right: 2vw;\\r\\n}\\r\\n\\r\\n.right {\\r\\n    float:left;\\r\\n    width: 45vw;\\r\\n}\\r\\n\\r\\n.panel-header {\\r\\n    height: 35px!important;\\r\\n}\\r\\n\\r\\n.flag-icon {\\r\\n    height: 15px;\\r\\n    padding-left: 15px;\\r\\n    padding-right: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"left\\\">\\r\\n        <div id=\\\"lmapa\\\" class=\\\"lmapa\\\"></div>\\r\\n      </div>\\r\\n  <div class=\\\"right\\\">\\r\\n    <div class=\\\"filter\\\">\\r\\n          <mat-select \\r\\n            placeholder=\\\"Click for filtering business types\\\" \\r\\n            [(value)]=\\\"selectedFirmTypes\\\" \\r\\n            (selectionChange)=\\\"filtering()\\\" \\r\\n            multiple>\\r\\n            <mat-option *ngFor=\\\"let firmType of firmTypes\\\" [value]=\\\"firmType\\\">\\r\\n              {{firmType.name}} ({{firmType.count}})\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n    </div>\\r\\n    <mat-list class=\\\"lista\\\">\\r\\n      <ng-container *ngFor=\\\"let countryFirm of countryFirms\\\">\\r\\n        <h3 mat-subheader>  <img class=\\\"flag-icon\\\" src=\\\"assets/icons/flag/{{countryFirm.country}}.svg\\\">{{countryFirm.country}}</h3>\\r\\n        <mat-expansion-panel *ngFor=\\\"let firm of countryFirm.firms\\\">\\r\\n          <mat-expansion-panel-header class=\\\"panel-header\\\">\\r\\n            <mat-panel-title>\\r\\n                <img class=\\\"flag-icon\\\" src=\\\"assets/icons/firmtype/{{firm.type}}.svg\\\"> {{firm.name}}\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              {{firm.date}}\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <div>\\r\\n            <table>\\r\\n                <tr>{{\\\"Place: \\\" + firm.place}}</tr>\\r\\n                <tr>{{\\\"Description: \\\" + firm.description}}</tr>\\r\\n                <tr>{{\\\"Type: \\\" + getTypeName(firm.type)}}</tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n      </ng-container>\\r\\n    </mat-list>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Firm } from '../models/firm';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport { AuthService } from '../services/auth';\r\nimport { FirmsProvider } from './firms.provider';\r\nimport { FirmType } from '../models/firmtype';\r\n\r\n\r\nconst iconBaseUrl = 'assets/icons/';\r\n\r\ninterface CFirmType extends  FirmType\r\n{ count: number; }\r\n\r\n@Component({\r\n  selector: 'app-firms',\r\n  templateUrl: './firms.component.html',\r\n  styleUrls: ['./firms.component.css']\r\n})\r\n\r\nexport class FirmsComponent implements OnInit {\r\n  firms: Firm[];\r\n  countryFirms: { country: string, firms: Firm[] }[];\r\n  firmTypes: CFirmType[] = [];\r\n  selectedFirmTypes: CFirmType[] = [];\r\n\r\n  mymap: L.Map;\r\n  centar = L.latLng(45.57185, 19.640113);\r\n  zoom = 8;\r\n  markerClusters = L.markerClusterGroup({ disableClusteringAtZoom: 11 });\r\n  baselayer = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',\r\n    {\r\n      attribution:\r\n        `Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors,\r\n      <a href=\"http://creativeclmmons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>`,\r\n      maxZoom: 18,\r\n      id: 'mapbox.streets',\r\n      accessToken: 'pk.eyJ1IjoicnBla28iLCJhIjoiY2prMmh3ZHNmMGxwYTNwbjVrM2YwbHZmNiJ9.xPpVMvB1XQhtetosemv_4w'\r\n    });\r\n\r\n  constructor(\r\n    public firmsProvider: FirmsProvider,\r\n    public authService: AuthService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createMap();\r\n    this.loadData();\r\n  }\r\n\r\n  createMap() {\r\n    this.mymap = L.map('lmapa');\r\n    this.mymap.setView(this.centar, this.zoom);\r\n    this.baselayer.addTo(this.mymap);\r\n  }\r\n\r\n  loadData() {\r\n    this.countryFirms = [];\r\n    this.firmsProvider.firmTypes.subscribe(firmTypes => {\r\n      for (let i = 0; i < firmTypes.length; i++) {\r\n        this.firmTypes.push({ id: i, name: firmTypes[i].name, order: firmTypes[i].order, count: 0 });\r\n      }\r\n      this.firmsProvider.firms.subscribe(firms => {\r\n        // console.log('firms: ' + JSON.stringify(firms));\r\n        this.firms = firms;\r\n        this.countTypes(this.firms);\r\n        // this.selectedFirmtypes = this.firmTypes.filter(ft => ft.count > 0);\r\n        this.filtering();\r\n      }, err => console.log('firmsprovider err: ' + err));\r\n    });\r\n  }\r\n\r\n  countTypes(firms: Firm[]) {\r\n    for (let i = 0; i < firms.length; i++) {\r\n      let ft = this.firmTypes.find(type => type.id === firms[i].type);\r\n      if (ft) {\r\n        ft.count++;\r\n      }\r\n    }\r\n  }\r\n\r\n  getTypeName(id: number){\r\n    const type = this.firmTypes.find(t => t.id === id);\r\n    if (type) {\r\n        return type.name;\r\n    } else {\r\n        return '';\r\n    }\r\n  }\r\n\r\n   filtering() {\r\n    const filter = [];\r\n    this.selectedFirmTypes.forEach(ft => filter.push(ft.id));\r\n    this.processFirms(this.firms.filter(firm => filter.includes(firm.type)));\r\n  }\r\n\r\n  processFirms(firms: Firm[]) {\r\n    this.countryFirms = [];\r\n    this.markerClusters.clearLayers();\r\n    for (let i = 0; i < firms.length; i++) {\r\n      this.groupBycountry(firms[i]);\r\n      if ((typeof firms[i].lat === 'number') && (typeof firms[i].lon === 'number')) {\r\n        this.addMarker(firms[i]);\r\n      }\r\n      this.mymap.addLayer(this.markerClusters);\r\n    }\r\n    // console.log((new Date()).toISOString() + ' processfirms ...');\r\n    if (this.selectedFirmTypes.length > 0){\r\n       this.mymap.fitBounds(this.markerClusters.getBounds());\r\n    }\r\n  }\r\n\r\n  addMarker(firm:Firm) {\r\n    const icon = L.icon({ iconUrl: iconBaseUrl + 'firmtype/' + firm.type + '.svg'});\r\n    const marker = L.marker(new L.LatLng(firm.lat, firm.lon), { title: firm.name, icon: icon });\r\n    marker.bindPopup('<div>' + firm.name + '</div>');\r\n    this.markerClusters.addLayer(marker);\r\n  }\r\n\r\n  groupBycountry(firm: Firm) {\r\n    const index = this.countryFirms.findIndex(ss => ss.country === firm.countrycode);\r\n    // console.log(\"countryfirm index: \" + index);\r\n    if (index > -1) {\r\n      this.countryFirms[index].firms.push(firm);\r\n    } else {\r\n      this.countryFirms.push({ country: firm.countrycode, firms: [firm] });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { Firm } from '../models/firm';\r\nimport { FirmType } from '../models/firmtype';\r\n\r\n@Injectable()\r\nexport class FirmsProvider {\r\n    public firms: Observable<Firm[]>;\r\n    public firmTypes: Observable<FirmType[]>;\r\n\r\n    constructor(public db: AngularFireDatabase) {\r\n        this.firms = db.list<Firm>('/firms').valueChanges();\r\n        this.firmTypes = db.list<FirmType>('/firmtype').valueChanges();\r\n}\r\n\r\n}","module.exports = \".front-image{\\r\\n    width: 250px;\\r\\n}\\r\\n\\r\\n.login-button{\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.login-lista{\\r\\n    text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<mat-grid-list cols=\\\"2\\\">\\r\\n        <mat-grid-tile>\\r\\n                <div style=\\\"text-align:center\\\">\\r\\n                    <img class=\\\"front-image\\\" alt=\\\"Dog exhibitors heper app!\\\" src=\\\"/assets/images/welcome.jpg\\\">\\r\\n                </div>\\r\\n        </mat-grid-tile>\\r\\n        <mat-grid-tile>\\r\\n                <div *ngIf=\\\"authService.afAuth.user | async as user; else showLogin\\\">\\r\\n                        <h2>Hello {{ user.isAnonymous?\\\" Dear Guest\\\":user.displayName }}!</h2>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"logout()\\\">{{ user.isAnonymous?\\\"Login\\\":\\\"Logout\\\"}}</button>\\r\\n                    </div>\\r\\n                    <ng-template #showLogin>\\r\\n                        <mat-list [ngClass]=\\\"login-lista\\\">\\r\\n                            <mat-list-item>\\r\\n                                <button class=\\\"login-button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"loginWithGoogle()\\\">Login with Google</button>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <button class=\\\"login-button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"loginWithFB()\\\">Login with Facebook</button>\\r\\n                            </mat-list-item>\\r\\n                            <mat-list-item>\\r\\n                                <button class=\\\"login-button\\\" mat-raised-button color=\\\"secondary\\\" (click)=\\\"loginAsGuest()\\\">Login as Guest</button>\\r\\n                            </mat-list-item>\\r\\n                        </mat-list>\\r\\n                    </ng-template>\\r\\n        </mat-grid-tile>\\r\\n</mat-grid-list>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent  {\r\n\r\n  constructor(public authService: AuthService, private router: Router, private ngZone: NgZone) { }\r\n\r\n  loginWithGoogle() {\r\n    this.authService.signInWithGoogle().then(u => {\r\n      this.ngZone.run(() => this.router.navigate(['/shows']));\r\n      // console.log('u:  ' + JSON.stringify(u));\r\n    } );\r\n  }\r\n\r\n  loginWithFB() {\r\n    this.authService.signInWithFB().then(u =>  this.router.navigate(['/shows']));\r\n  }\r\n\r\n  loginAsGuest(){\r\n    this.authService.signInAnonymously().then(u => {\r\n      this.router.navigate(['/shows']);\r\n      // console.log(\"anonimus: \" + JSON.stringify(u));\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.authService.signOut();\r\n  }\r\n\r\n}\r\n","module.exports = \".container {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.left {\\r\\n    float:left;\\r\\n    width: 40vw;\\r\\n    margin-right: 2vw;\\r\\n}\\r\\n\\r\\n.right {\\r\\n    float:left;\\r\\n    width: 55vw;\\r\\n}\\r\\n\\r\\n.form-field {\\r\\n   width: 35vw;\\r\\n}\\r\\n\\r\\n.cancel-link {\\r\\n    padding-left: 1vw;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"left\\\">\\r\\n        <form [formGroup]=\\\"firmForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div>\\r\\n                <mat-form-field class=\\\"form-field\\\">\\r\\n                    <mat-select placeholder=\\\"Firm Type\\\" formControlName=\\\"type\\\">\\r\\n                        <mat-option *ngFor=\\\"let firmtype of firmtypes\\\" [value]=\\\"firmtype.id\\\">\\r\\n                            {{firmtype.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-form-field class=\\\"form-field\\\">\\r\\n                    <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-form-field class=\\\"form-field\\\">\\r\\n                    <input matInput formControlName=\\\"description\\\" placeholder=\\\"Description\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-form-field class=\\\"form-field\\\">\\r\\n                    <input matInput formControlName=\\\"place\\\" placeholder=\\\"Place\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-form-field class=\\\"form-field\\\">\\r\\n                    <input matInput formControlName=\\\"address\\\" placeholder=\\\"Address\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-form-field class=\\\"form-field\\\">\\r\\n                    <mat-select placeholder=\\\"Country\\\" formControlName=\\\"countrycode\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                        <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.code\\\">\\r\\n                            {{country.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-form-field class=\\\"form-field\\\">\\r\\n                    <input matInput formControlName=\\\"email\\\" placeholder=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-error *ngIf=\\\"email && email.hasError('email')\\\">\\r\\n                        Please enter a valid email address\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-form-field class=\\\"form-field\\\">\\r\\n                    <input matInput formControlName=\\\"phone\\\" placeholder=\\\"phone\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <div class=\\\"form-container\\\">\\r\\n                                <mat-form-field class=\\\"form-field\\\">\\r\\n                                    <input matInput formControlName=\\\"lat\\\" placeholder=\\\"Latitude\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-container\\\">\\r\\n                                <mat-form-field class=\\\"form-field\\\">\\r\\n                                    <input matInput formControlName=\\\"lon\\\" placeholder=\\\"Longitude\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a href=\\\"https://www.latlong.net/\\\" target=\\\"_blank\\\" title=\\\"How to get coordinates?\\\">\\r\\n                                <mat-icon>contact_support</mat-icon>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n            <div>\\r\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">{{submitButtonText}}</button>\\r\\n                <button type=\\\"button\\\" mat-button (click)=\\\"populateForm()\\\">Cancel</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"right\\\">\\r\\n        <mat-toolbar>My businesses:</mat-toolbar>\\r\\n        <mat-expansion-panel *ngFor=\\\"let firm of firms\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n                <mat-panel-title>\\r\\n                    {{firm.name}}\\r\\n                </mat-panel-title>\\r\\n                <mat-panel-description>\\r\\n                    {{getFirmtype(firm.type)}}\\r\\n                </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n            <div>\\r\\n                <table>\\r\\n                    <tr>{{\\\"Place: \\\" + firm.place}}</tr>\\r\\n                    <tr>{{\\\"Description: \\\" + firm.description}}</tr>\\r\\n                    <tr>{{\\\"Type: \\\" + getFirmtype(firm.type)}}</tr>\\r\\n                    <tr>{{\\\"Address: \\\" + firm.address}}</tr>\\r\\n                    <tr>{{\\\"Email: \\\" + firm.email}}</tr>\\r\\n                    <tr>{{\\\"Phone: \\\" + firm.phone}}</tr>\\r\\n                </table>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-action-row>\\r\\n                    <button mat-button (click)=\\\"populateForm(firm)\\\">\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                </mat-action-row>\\r\\n            </div>\\r\\n        </mat-expansion-panel>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Firm } from '../models/firm';\r\nimport { RegistrationProvider } from './registration.provider';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { FirmType } from '../models/firmtype';\r\nimport { Country } from '../models/country';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth';\r\nimport { MyErrorStateMatcher } from '../validators/matcher';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\n\r\nexport class RegistrationComponent implements OnInit {\r\n  firm: Firm;\r\n  firms: Firm[] = [];\r\n  states: Country[] = [];\r\n  firmtypes: FirmType[] = [];\r\n  admin = 0;\r\n  firmForm: FormGroup;\r\n  submitButtonText = 'Add';\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public registrationProvider: RegistrationProvider,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private fb: FormBuilder) {\r\n    this.firmForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      description: '',\r\n      place: '',\r\n      address: '',\r\n      countrycode: ['', Validators.required],\r\n      type: [null, Validators.required],\r\n      lat: null,\r\n      lon: null,\r\n      email: ['', Validators.email],\r\n      phone: '',\r\n    });\r\n    this.firm = {\r\n      'key': '',\r\n      'userId': this.authService.getUid(),\r\n      'name': '',\r\n      'description': '',\r\n      'place': '',\r\n      'address': '',\r\n      'countrycode': '',\r\n      'type': null,\r\n      'lat': null,\r\n      'lon': null,\r\n      'email': '',\r\n      'phone': '',\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registrationProvider.firmtypes.subscribe(firmtypes => {\r\n      for (let i = 0; i < firmtypes.length; i++) {\r\n        this.firmtypes.push({ id: i, name: firmtypes[i].name, order: firmtypes[i].order });\r\n      }\r\n      // console.log(JSON.stringify(this.firmtypes));\r\n    });\r\n    this.authService.afAuth.authState.subscribe(user => {\r\n      let userId = '';\r\n      if (user) {\r\n        userId = user.uid;\r\n      }\r\n      this.registrationProvider.getFirms(userId).subscribe(firms => this.firms = firms);});\r\n    this.registrationProvider.states.subscribe(states => this.states = states);\r\n  }\r\n\r\n  populateForm(firm: Firm) {\r\n    if (firm) {\r\n      this.firm = firm;\r\n      this.submitButtonText = 'Save edits';\r\n    } else {\r\n      this.firm = {\r\n        'key': '',\r\n        'userId': this.authService.getUid(),\r\n        'name': '',\r\n        'description': '',\r\n        'place': '',\r\n        'address': '',\r\n        'countrycode': '',\r\n        'type': null,\r\n        'lat': null,\r\n        'lon': null,\r\n        'email': '',\r\n        'phone': '',\r\n      };\r\n      this.submitButtonText = 'Add';\r\n    }\r\n    this.firmForm.setValue({\r\n      name: this.firm.name || '',\r\n      description: this.firm.description || '',\r\n      place: this.firm.place || '',\r\n      address: this.firm.address || '',\r\n      type: (this.firm.type == null) ? '' : +this.firm.type,\r\n      countrycode: this.firm.countrycode || '',\r\n      lat: +this.firm.lat || null,\r\n      lon: +this.firm.lon || null,\r\n      email: this.firm.email || '',\r\n      phone: this.firm.phone || '',\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.firm.name = this.firmForm.value.name;\r\n    this.firm.description = this.firmForm.value.description;\r\n    if (!this.firm.userId) {\r\n      this.firm.userId = this.authService.getUid();\r\n    }\r\n    this.firm.place = this.firmForm.value.place;\r\n    this.firm.address = this.firmForm.value.address;\r\n    this.firm.type = this.firmForm.value.type;\r\n    this.firm.countrycode = this.firmForm.value.countrycode;\r\n    this.firm.lat = +this.firmForm.value.lat;\r\n    this.firm.lon = +this.firmForm.value.lon;\r\n    this.firm.email = this.firmForm.value.email;\r\n    this.firm.phone = this.firmForm.value.phone;\r\n    this.registrationProvider.upsertFirm(this.firm)\r\n      .then(() => this.populateForm(null))\r\n      .catch(err => console.log('err: ' + err));\r\n  }\r\n\r\n  getFirmtype(id: any) {\r\n    const firmtype = this.firmtypes.find(t => t.id === id);\r\n    if (firmtype) {\r\n      return firmtype.name;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { Firm } from '../models/firm';\r\nimport { FirmType } from '../models/firmtype';\r\nimport { Country } from '../models/country';\r\nimport { AuthService } from '../services/auth';\r\n\r\n@Injectable()\r\nexport class RegistrationProvider {\r\n    public firms: Observable<Firm[]>;\r\n    public firmtypes: Observable<FirmType[]>;\r\n    public states: Observable<Country[]>;\r\n    firmRef: any;\r\n\r\n    constructor(public db: AngularFireDatabase, private authService: AuthService) {\r\n        this.firms = db.list<Firm>('/firms', ref => ref.orderByChild('userId').equalTo('' + this.authService.getUid())).valueChanges();\r\n        this.firmtypes = db.list<FirmType>('/firmtype').valueChanges();\r\n        this.states = db.list<Country>('/countries').valueChanges();\r\n        this.firmRef = db.database.ref('/firms/');\r\n}\r\n\r\npublic getFirms(userId:string){\r\n    return this.db.list<Firm>('/firms', ref => ref.orderByChild('userId').equalTo(userId)).valueChanges();\r\n}\r\n\r\npublic upsertFirm(firm: Firm){\r\n    if (!firm.key || firm.key == '' || firm.key == 'undefined'){\r\n        firm.key = this.firmRef.push().key;\r\n    } \r\n    const firmObj = this.db.object('/firms/' + firm.key);\r\n    return firmObj.update(firm);\r\n}\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { auth } from 'firebase';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\tprivate user: firebase.User;\r\n\r\n\tconstructor(public afAuth: AngularFireAuth, public db: AngularFireDatabase) {\r\n\t\tafAuth.authState.subscribe(user => {\r\n\t\t\tthis.user = user;\r\n\t\t});\r\n\t}\r\n\r\n\tgetUid(): string {\r\n\t\treturn this.user ? this.user.uid : '';\r\n\t}\r\n\r\n\tgetUserdata() {\r\n\t\treturn this.db.database.ref('/userdata/' + (this.getUid() || 0));\r\n\t}\r\n\r\n\tgetUserCountries() {\r\n\t\treturn this.db.database.ref('/userdata/' + (this.getUid() || 0) + '/usercountries/');\r\n\t}\r\n\r\n\tupdateUserCountries(usercountries: string[]) {\r\n\t\tif (this.user) {\r\n\t\t\tconst usercountriesRef = this.db.object('/userdata/' + this.getUid() + '/usercountries');\r\n\t\t\tusercountriesRef.set(usercountries);\r\n\t\t}\r\n\t}\r\n\r\n\tsignInWithEmail(credentials) {\r\n\t\tconsole.log('Sign in with email');\r\n\t\treturn this.afAuth.auth.signInWithEmailAndPassword(credentials.email,\r\n\t\t\tcredentials.password);\r\n\t}\r\n\r\n\tsignUp(credentials) {\r\n\t\treturn this.afAuth.auth.createUserWithEmailAndPassword(credentials.email, credentials.password);\r\n\t}\r\n\r\n\tget authenticated(): boolean {\r\n\t\treturn this.user !== null;\r\n\t}\r\n\r\n\tget anonymous(): boolean {\r\n\t\tif (this.user) {\r\n\t\t\treturn this.user.isAnonymous;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetEmail() {\r\n\t\treturn this.user && this.user.email;\r\n\t}\r\n\r\n\tsignOut(): Promise<void> {\r\n\t\treturn this.afAuth.auth.signOut();\r\n\t}\r\n\r\n\tsignInWithGoogle() {\r\n\t\tconsole.log('Sign in with google');\r\n\t\treturn this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\r\n\t}\r\n\r\n\tsignInWithFB() {\r\n\t\tconsole.log('Sign in with facebook');\r\n\t\treturn this.afAuth.auth.signInWithPopup(new auth.FacebookAuthProvider());\r\n\t}\r\n\r\n\tsignInAnonymously() {\r\n\t\treturn this.afAuth.auth.signInAnonymously();\r\n\t}\r\n\r\n}\r\n","module.exports = \".main {\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\\r\\n.form-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n.form-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.left {\\r\\n    float: left;\\r\\n    width: 60vw;\\r\\n    margin-right: 2vw;\\r\\n}\\r\\n\\r\\n.right {\\r\\n\\r\\n}\"","module.exports = \"<div class=\\\"main\\\">\\r\\n    <form [formGroup]=\\\"showForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"left\\\">\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"name\\\" placeholder=\\\"Name\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-error *ngIf=\\\"name.invalid\\\">Invalid name: {{name.hasError('maxLength')?' max length error!':'\\r\\n                    required!'}}</mat-error>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"organizer\\\" placeholder=\\\"organizer\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"place\\\" placeholder=\\\"Place\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"manifestation\\\" placeholder=\\\"Manifestation (more than 1)\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Show Level\\\" formControlName=\\\"level\\\">\\r\\n                        <mat-option *ngFor=\\\"let showLevel of showLevels\\\" [value]=\\\"showLevel.id\\\">\\r\\n                            {{showLevel.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Show Type\\\" formControlName=\\\"type\\\">\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Country Code\\\" formControlName=\\\"countrycode\\\">\\r\\n                        <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.code\\\">\\r\\n                            {{country.code}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"link\\\" placeholder=\\\"entry info link\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-error *ngIf=\\\"showForm.get('link').errors\\\">Invalid link!</mat-error>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"right\\\">\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"date\\\" placeholder=\\\"Opening Date(YYYYMMDD)\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-error *ngIf=\\\"date && date.hasError('invalid format')\\\">\\r\\n                            Please enter a valid date format: YYYYMMDD, like 20201231\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"date && date.hasError('invalid year')\\\">\\r\\n                        Please enter a valid year: between 2018-2040\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"regclosed\\\" placeholder=\\\"Registration closed (YYYYMMDD)\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-error *ngIf=\\\"date && date.hasError('invalid format')\\\">\\r\\n                        Please enter a valid date format: YYYYMMDD, like 20201231\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"date && date.hasError('invalid year')\\\">\\r\\n                        Please enter a valid year: between 2018-2040\\r\\n                     </mat-error>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input matInput formControlName=\\\"latlon\\\" placeholder=\\\"Latitude,Longitude\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"lat\\\" placeholder=\\\"Latitude\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-error *ngIf=\\\"showForm.get('lat').errors\\\">Invalid lat format!</mat-error>\\r\\n            </div>\\r\\n            <div class=\\\"form-container\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput formControlName=\\\"lon\\\" placeholder=\\\"Longitude\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n                <mat-error *ngIf=\\\"showForm.get('lon').errors\\\">Invalid lon format!</mat-error>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" mat-raised-button [disabled]=\\\"showForm.invalid\\\" color=\\\"primary\\\">Save</button>\\r\\n            <button type=\\\"button\\\" mat-button (click)=\\\"back()\\\">Cancel</button>\\r\\n        </div>\\r\\n    </form>\\r\\n \\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Show } from '../models/show';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ShowProvider } from './show.provider';\r\nimport { LatValidator } from '../validators/lat';\r\nimport { LonValidator } from '../validators/lon';\r\nimport { ShowLevel } from '../models/showlevel';\r\nimport { DateValidator } from '../validators/date';\r\nimport { Country } from '../models/country';\r\nimport { ValidateUrl } from '../validators/url';\r\nimport { MyErrorStateMatcher } from '../validators/matcher';\r\n\r\n@Component({\r\n  selector: 'app-show',\r\n  templateUrl: './show.component.html',\r\n  styleUrls: ['./show.component.css']\r\n})\r\n\r\nexport class ShowComponent implements OnInit {\r\n  show: Show;\r\n  showForm: FormGroup;\r\n  showLevels: ShowLevel[] = [];\r\n  types = ['General', 'Group', 'Single breed'];\r\n  countries: Country[];\r\n  nameC: FormControl;\r\n  dateC: FormControl;\r\n  regopenC: FormControl;\r\n  regclosedC: FormControl;\r\n  latC: FormControl;\r\n  lonC: FormControl;\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private fb: FormBuilder, private showProvider: ShowProvider) {\r\n    this.showForm = this.fb.group({\r\n      name: ['', Validators.compose([Validators.required, Validators.maxLength(35)])],\r\n      organizer: '',\r\n      place: '',\r\n      manifestation: '',\r\n      level: null,\r\n      type: 'General',\r\n      countrycode: '',\r\n      link: ['', [ValidateUrl]],\r\n      date: [null, DateValidator.isValid],\r\n      regclosed: [null, DateValidator.isValid],\r\n      latlon: null,\r\n      lat: [0, LatValidator.isValid],\r\n      lon: [0, LonValidator.isValid]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params.show) {\r\n        this.show = JSON.parse(params.show);\r\n        // console.log(JSON.stringify(params.show));\r\n      } else {\r\n        this.show = {\r\n          'key': '',\r\n          'name': '',\r\n          'organizer': '',\r\n          'place': '',\r\n          'manifestation':'',\r\n          'level': 1,\r\n          'type': 'General',\r\n          'countrycode': '',\r\n          'link': '',\r\n          'date': null,\r\n          'regclosed': null,\r\n          'lat': null,\r\n          'lon': null\r\n        };\r\n        this.show.date = +((new Date()).toISOString().slice(0, 10).replace(/-/g, ''));\r\n      }\r\n      this.showForm.setValue({\r\n        name: this.show.name || '',\r\n        organizer: this.show.organizer || '',\r\n        place: this.show.place || '',\r\n        manifestation: this.show.manifestation || '',\r\n        level: this.show.level || 1, // nemoj null, jer ako je this.show.level == 0 bice null\r\n        type: this.show.type || 'General',\r\n        countrycode: this.show.countrycode || '',\r\n        link: this.show.link || '',\r\n        date: this.show.date || '',\r\n        regclosed: this.show.regclosed || '',\r\n        latlon: null,\r\n        lat: this.show.lat || 0,\r\n        lon: this.show.lon || 0,\r\n      });\r\n    });\r\n    this.showProvider.showLevels.subscribe(showLevels => {\r\n      for (let i = 0; i < showLevels.length; i++) {\r\n        this.showLevels.push({ id: i, name: showLevels[i].name, description: showLevels[i].description, order: showLevels[i].order });\r\n      }\r\n    });\r\n    this.showProvider.countries.subscribe(countries => this.countries = countries);\r\n    this.showForm.controls['latlon'].valueChanges.subscribe(val => this.populateLatLon(\"\" + val));\r\n  }\r\n\r\n  onSubmit() {\r\n    this.show.name = this.showForm.value.name;\r\n    this.show.organizer = this.showForm.value.organizer;\r\n    this.show.place = this.showForm.value.place;\r\n    this.show.manifestation = this.showForm.value.manifestation;\r\n    this.show.level = this.showForm.value.level;\r\n    this.show.type = this.showForm.value.type;\r\n    this.show.countrycode = this.showForm.value.countrycode;\r\n    this.show.link = this.showForm.value.link;\r\n    this.show.date = +('' + this.showForm.value.date).slice(0, 10);\r\n    this.show.regclosed = +('' + this.showForm.value.regclosed).slice(0, 10);\r\n    this.show.lat = +this.showForm.value.lat;\r\n    this.show.lon = +this.showForm.value.lon;\r\n    this.showProvider.upsertShow(this.show)\r\n      .then(() => this.router.navigate(['shows']))\r\n      .catch(err => console.log('err: ' + err));\r\n  }\r\n  \r\n  populateLatLon(latlon: any){\r\n    let pattern=new RegExp(\"[0-9]+(,[0-9]+)*\");\r\n    if (pattern.test(latlon)){\r\n      const [lat, lon] = latlon.split(',');\r\n      if (this.showForm.controls['lat'].pristine){\r\n        this.showForm.controls['lat'].setValue(lat);\r\n      }\r\n      if (this.showForm.controls['lon'].pristine){\r\n        this.showForm.controls['lon'].setValue(lon);\r\n      }\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['/shows']);\r\n  }\r\n  \r\n  get name() { return this.showForm.get('name'); }\r\n  get link() { return this.showForm.get('link'); }\r\n  get date() { return this.showForm.get('date'); }\r\n  get regclosed() { return this.showForm.get('regclosed'); }\r\n  get lat() { return this.showForm.get('lat'); }\r\n  get lon() { return this.showForm.get('lon'); }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { Show } from '../models/show';\r\nimport { Observable } from 'rxjs';\r\nimport { ShowLevel } from '../models/showLevel';\r\nimport { Country } from '../models/country';\r\n\r\n\r\n@Injectable()\r\nexport class ShowProvider {\r\n    public showRef: any;\r\n    public showLevels: Observable<ShowLevel[]>;\r\n    public countries: Observable<Country[]>;\r\n\r\n    constructor(public db: AngularFireDatabase) {\r\n        this.showRef = db.database.ref('/shows/');\r\n        this.showLevels = db.list<ShowLevel>('/showlevel').valueChanges();\r\n        this.countries = db.list<Country>('/countries', ref => ref.orderByChild('name')).valueChanges();\r\n\r\n    }\r\n\r\n    upsertShow(show: Show){\r\n        if (!show.key || show.key === '' || show.key === 'undefined') {\r\n            show.key = this.showRef.push().key; }\r\n        const showObj = this.db.object('/shows/' + show.key);\r\n        return showObj.update(show);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"left\\\">\\r\\n    <div class=\\\"filter\\\">\\r\\n      <span class=\\\"mat-h3\\\">Filter shows:</span>\\r\\n      <mat-select class=\\\"filter-type\\\" placeholder=\\\"Click for filtering types\\\" [(value)]=\\\"selectedTypes\\\"\\r\\n        (selectionChange)=\\\"runFilter()\\\" multiple>\\r\\n        <mat-select-trigger>\\r\\n          <img class=\\\"checkbox-icon\\\" src=\\\"assets/icons/checkbox.svg\\\"> {{getFilterTypeHeader()}}\\r\\n        </mat-select-trigger>\\r\\n        <mat-option *ngFor=\\\"let type of allTypes\\\" [value]=\\\"type.name\\\">\\r\\n          <span>{{type.name}} ({{type.count}}/{{type.all}})</span>\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n\\r\\n      <mat-select class=\\\"filter-level\\\" placeholder=\\\"Click for filtering level\\\" [(value)]=\\\"selectedLevels\\\"\\r\\n        (selectionChange)=\\\"runFilter()\\\" multiple>\\r\\n        <mat-select-trigger>\\r\\n          <img class=\\\"checkbox-icon\\\" src=\\\"assets/icons/checkbox.svg\\\"> {{getFilterLevelHeader()}}\\r\\n        </mat-select-trigger>\\r\\n        <mat-option *ngFor=\\\"let level of allLevels\\\" [value]=\\\"level\\\">\\r\\n          <img src=\\\"assets/icons/show/{{level.id}}.svg\\\">\\r\\n          <span>{{level.description}} ({{level.count}}/{{level.all}})</span>\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n\\r\\n      <mat-select class=\\\"filter-country\\\" placeholder=\\\"Click for filtering countries\\\" [(value)]=\\\"countries\\\"\\r\\n        (selectionChange)=\\\"runFilter();updateCountries()\\\" multiple>\\r\\n        <div>\\r\\n          <button class=\\\"check-uncheck-button\\\" mat-raised-button (click)=\\\"checkAllCountries(); runFilter();updateCountries()\\\">\\r\\n            Select All\\r\\n          </button>\\r\\n          <button class=\\\"check-uncheck-button\\\" mat-raised-button (click)=\\\"uncheckAllCountries(); runFilter();updateCountries()\\\">\\r\\n            Deselect All\\r\\n          </button>\\r\\n        </div>\\r\\n        <mat-select-trigger>\\r\\n          <img class=\\\"checkbox-icon\\\" src=\\\"assets/icons/checkbox.svg\\\"> {{getFilterCountryHeader()}}\\r\\n        </mat-select-trigger>\\r\\n        <mat-option *ngFor=\\\"let country of allCountries\\\" [value]=\\\"country.code\\\">\\r\\n          <span>{{country.name}} ({{country.count}}/{{country.all}})</span>\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </div>\\r\\n    <div id=\\\"lmapa\\\" class=\\\"lmapa\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"right\\\">\\r\\n    <div class=\\\"admin\\\" *ngIf=\\\"admin>2\\\">\\r\\n      <button mat-raised-button (click)=\\\"loadAll()\\\">{{txtLoad()}}</button>\\r\\n      <button mat-button><a routerLink=\\\"/show\\\">Add Show</a></button>\\r\\n    </div>\\r\\n    <div class=\\\"period\\\">\\r\\n      <span class=\\\"mat-h3\\\">Months to load:</span>\\r\\n      <mat-slider class=\\\"period-slider\\\" [max]=\\\"6\\\" [min]=\\\"1\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [tickInterval]=\\\"1\\\" (change)=\\\"loadPeriod()\\\"\\r\\n        [(ngModel)]=\\\"loadingMonths\\\">\\r\\n      </mat-slider>\\r\\n    </div>\\r\\n    <mat-list class=\\\"main-list\\\">\\r\\n      <ng-container *ngFor=\\\"let monthshow of monthshows\\\">\\r\\n        <h3 mat-subheader class=\\\"mnth-subheader\\\">{{intToDateToString(+(monthshow.month + \\\"01\\\"), \\\"MMMM YYYY\\\")}}</h3>\\r\\n        <div class=\\\"mnf\\\" *ngFor=\\\"let manifestation of monthshow.manifestations\\\">\\r\\n          <div *ngIf=\\\"manifestation.name\\\">\\r\\n            <h3 mat-subheader class=\\\"mnf-subheader\\\">\\r\\n              <img class=\\\"show-icon\\\" src=\\\"assets/icons/manifestation.svg\\\">\\r\\n              {{manifestation.name}}\\r\\n              <button *ngIf=\\\"admin>2\\\" type=\\\"button\\\" mat-button (click)=\\\"addToManifestation(manifestation)\\\">\\r\\n                <mat-icon>add</mat-icon>\\r\\n              </button>\\r\\n            </h3>\\r\\n          </div>\\r\\n          <div class=\\\"show\\\" *ngFor=\\\"let show of manifestation.shows\\\">\\r\\n            <mat-expansion-panel [ngClass]=\\\"{'panel-header-finished': show.past}\\\" \\r\\n              matTooltip=\\\"{{getToolTip(show)}}\\\">\\r\\n              <mat-expansion-panel-header class=\\\"panel-header\\\">\\r\\n                <mat-panel-title [ngClass]=\\\"{'panel-header-finished': show.past}\\\">\\r\\n                  <span class=\\\"panel-title\\\">\\r\\n                    <img class=\\\"show-icon\\\" src=\\\"assets/icons/show/{{show.level}}.svg\\\">\\r\\n                    <img class=\\\"flag-icon\\\" src=\\\"assets/icons/flag/{{show.countrycode}}.svg\\\">\\r\\n                    {{show.name}}, {{show.place}} / {{intToDateToString(show.date, 'ddd, Do')}}\\r\\n                  </span>\\r\\n                </mat-panel-title>\\r\\n                <mat-panel-description>\\r\\n                  <mat-icon class=\\\"reg-open\\\" *ngIf=\\\"show.regFlag==='open'\\\">access_time</mat-icon>\\r\\n                  <mat-icon class=\\\"reg-lastminute\\\" *ngIf=\\\"show.regFlag==='lastminute'\\\">av_timer</mat-icon>\\r\\n                  <mat-icon class=\\\"reg-closed\\\" *ngIf=\\\"show.regFlag==='closed'\\\">timer_off</mat-icon>\\r\\n                </mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n              <div>\\r\\n                <table>\\r\\n                  <tr>\\r\\n                    <td>{{\\\"Place: \\\" + show.place}}</td>\\r\\n                    <td>{{\\\"Opening date: \\\" + intToDateToString(show.date, 'll')}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td>{{\\\"Type: \\\" + show.type + \\\" Show\\\"}}</td>\\r\\n                    <td>{{\\\"Registration until: \\\" + intToDateToString(show.regclosed, 'll')}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td>{{\\\"Organizer: \\\" + show.organizer}}</td>\\r\\n                    <td><span *ngIf=\\\"show.link\\\">\\r\\n                        <a href={{show.link}} target=\\\"_blank\\\">Entry info link</a>\\r\\n                      </span></td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n              </div>\\r\\n              <mat-action-row *ngIf=\\\"admin>2\\\">\\r\\n                <button mat-button>\\r\\n                  <a routerLink=\\\"/show\\\" [queryParams]=\\\"{show: show | json }\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </a>\\r\\n                </button>\\r\\n              </mat-action-row>\\r\\n            </mat-expansion-panel>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </mat-list>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.left {\\n  float: left;\\n  width: 47vw;\\n  margin-right: 2vw;\\n  position: fixed; }\\n.right {\\n  float: left;\\n  padding-left: 49vw;\\n  width: 48vw; }\\n.admin {\\n  padding-bottom: 7px; }\\n.lmapa {\\n  position: relative;\\n  /* height: 50vh; */\\n  /* width:500px; */ }\\n#lmapa {\\n  height: 83vh; }\\n.filter {\\n  display: inline-block;\\n  padding-bottom: 2vh; }\\n.filter-type {\\n  padding-left: 30px;\\n  max-width: 10vw; }\\n.filter-level {\\n  padding-left: 20px;\\n  max-width: 10vw; }\\n.filter-country {\\n  padding-left: 20px;\\n  max-width: 12vw; }\\ntd {\\n  width: 50%;\\n  padding-right: 10px; }\\n.mnth-subheader {\\n  justify-content: center; }\\n.mnf-subheader {\\n  margin-left: 10px; }\\n.mnf {\\n  padding-bottom: 15px; }\\n.checkbox-icon {\\n  height: 15px;\\n  padding-right: 15px; }\\n.show {\\n  margin-bottom: 2px; }\\n.show-icon {\\n  height: 15px;\\n  padding-right: 15px; }\\n.flag-icon {\\n  height: 15px;\\n  padding-left: 15px;\\n  padding-right: 15px; }\\n.panel-header {\\n  height: 35px !important; }\\n.panel-title {\\n  width: 90%; }\\n.panel-header-finished {\\n  background-color: whitesmoke;\\n  color: #bdbdbd; }\\n.check-uncheck-button {\\n  width: 50%; }\\n.reg-open {\\n  color: #388e3c;\\n  padding-top: 1px;\\n  padding-right: 15px;\\n  padding-left: 15px; }\\n.reg-lastminute {\\n  color: #f44336;\\n  padding-top: 1px;\\n  padding-right: 15px;\\n  padding-left: 15px; }\\n.reg-closed {\\n  color: #9e9e9e;\\n  padding-top: 1px;\\n  padding-right: 15px;\\n  padding-left: 15px; }\\n.period {\\n  display: inline-block; }\\n.period-slider {\\n  width: 40vw;\\n  padding-left: 15px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Show } from '../models/show';\r\nimport { Userdata } from '../models/userdata';\r\nimport { AuthService } from '../services/auth';\r\nimport { ShowsProvider } from './shows.provider';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport * as moment from 'moment';\r\nimport { ShowLevel } from '../models/showlevel';\r\nimport { Country } from '../models/country';\r\nimport { Router } from '@angular/router';\r\n\r\ninterface ExtShowLevel extends ShowLevel {\r\n    count: number;\r\n    all: number;\r\n}\r\n\r\ninterface ExtCountry extends Country {\r\n    count: number;\r\n    all: number;\r\n}\r\n\r\ninterface ExtShow extends Show {\r\n    regFlag?: string;\r\n    past?: boolean;\r\n}\r\n\r\nconst iconBaseUrl = 'assets/icons/';\r\nconst intNow = +moment().format('YYYYMMDD');\r\n\r\n@Component({\r\n    selector: 'app-shows',\r\n    templateUrl: './shows.component.html',\r\n    styleUrls: ['./shows.component.scss']\r\n})\r\n\r\nexport class ShowsComponent implements OnInit {\r\n    shows: ExtShow[];\r\n    loadingMonths = 3;\r\n    allCountries: ExtCountry[] = [];\r\n    countries: string[] = [];\r\n    allLevels: ExtShowLevel[] = [];\r\n    selectedLevels: ExtShowLevel[] = [];\r\n    allTypes = [{ 'name': 'General', 'all': 0, 'count': 0 },\r\n    { 'name': 'Group', 'all': 0, 'count': 0 }, { 'name': 'Single breed', 'all': 0, 'count': 0 }];\r\n    selectedTypes = ['General', 'Group', 'Single breed'];\r\n    paramStartAt = +moment('' + intNow, 'YYYYMMDD').add(-1, 'weeks').format('YYYYMMDD');\r\n    paramEndAt = +moment('' + intNow, 'YYYYMMDD').add(this.loadingMonths, 'months').format('YYYYMMDD');\r\n    monthshows: { month: string, manifestations: { name: string, shows: Show[] }[] }[];\r\n    admin = 0;\r\n    mymap: L.Map;\r\n    markerClusters = L.markerClusterGroup({ disableClusteringAtZoom: 18 });\r\n    centar = L.latLng(45.57185, 19.640113);\r\n    zoom = 8;\r\n    baselayer = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',\r\n        {\r\n            attribution:\r\n                `Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors,\r\n      <a href=\"http://creativeclmmons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>`,\r\n            maxZoom: 18,\r\n            id: 'mapbox.streets',\r\n            accessToken: 'pk.eyJ1IjoicnBla28iLCJhIjoiY2prMmh3ZHNmMGxwYTNwbjVrM2YwbHZmNiJ9.xPpVMvB1XQhtetosemv_4w'\r\n        });\r\n\r\n    constructor(\r\n        public showsProvider: ShowsProvider,\r\n        public authService: AuthService,\r\n        public router: Router\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.createMap();\r\n        this.loadData();\r\n    }\r\n\r\n    createMap() {\r\n        this.mymap = L.map('lmapa');\r\n        this.mymap.setView(this.centar, this.zoom);\r\n        this.baselayer.addTo(this.mymap);\r\n    }\r\n\r\n    loadData() {\r\n        this.shows = [];\r\n        this.monthshows = [];\r\n        this.showsProvider.showLevels.subscribe(showLevels => {\r\n            this.allLevels = [];\r\n            for (let i = 0; i < showLevels.length; i++) {\r\n                this.allLevels.push({\r\n                    id: i,\r\n                    name: showLevels[i].name,\r\n                    description: showLevels[i].description,\r\n                    order: showLevels[i].order,\r\n                    count: 0,\r\n                    all: 0\r\n                });\r\n            }\r\n            this.showsProvider.getShows(this.paramStartAt, this.paramEndAt).subscribe(allshows => {\r\n                allshows.forEach(show => {\r\n                    const extShow = <ExtShow>show;\r\n                    if (show.date > intNow) {\r\n                        extShow.past = false;\r\n                    } else {\r\n                        extShow.past = true;\r\n                    }\r\n                    this.shows.push(extShow);\r\n                });\r\n                // console.log(JSON.stringify(this.shows));\r\n                this.showsProvider.allCountries.subscribe(allcountries => {\r\n                    this.allCountries = [];\r\n                    allcountries.forEach(c =>\r\n                        this.allCountries.push({\r\n                            code: c.code,\r\n                            name: c.name,\r\n                            count: 0,\r\n                            all: 0\r\n                        }));\r\n                    this.selectedLevels = this.allLevels;\r\n                    this.checkAllCountries();\r\n                    this.userDataSubscription();\r\n                    this.setRegFlag();\r\n                    this.countAll();\r\n                }, err => console.log('Countries provider err: ' + err));\r\n            }, err => console.log('Shows provider err: ' + err));\r\n        }, err => console.log('Show levels provider err: ' + err));\r\n    }\r\n\r\n    loadPeriod() {\r\n        this.paramEndAt = +moment('' + intNow, 'YYYYMMDD').add(this.loadingMonths, 'months').format('YYYYMMDD');\r\n        console.log(\"months: \" + this.loadingMonths);\r\n        console.log(\"start at: \" + this.paramStartAt);\r\n        console.log(\"end at: \" + this.paramEndAt);\r\n        this.showsProvider.getShows(this.paramStartAt, this.paramEndAt).subscribe(allshows => {\r\n            this.shows = [];\r\n            allshows.forEach(show => {\r\n                const extShow = <ExtShow>show;\r\n                if (show.date > intNow) {\r\n                    extShow.past = false;\r\n                } else {\r\n                    extShow.past = true;\r\n                }\r\n                this.shows.push(extShow);\r\n            });\r\n            this.runFilter();\r\n            this.setRegFlag();\r\n            this.allTypes.forEach(type => type.all = 0);\r\n            this.allLevels.forEach(lvl => lvl.all = 0);\r\n            this.allCountries.forEach(country => country.all = 0);\r\n            console.log(JSON.stringify(this.shows));\r\n            this.countAll();\r\n        }, err => console.log('Shows provider err: ' + err));\r\n    }\r\n\r\n    loadAll() {\r\n        if (this.paramStartAt > 0) {\r\n            this.paramStartAt = 0;\r\n            this.paramEndAt = 99999999;\r\n        } else {\r\n            this.paramStartAt = +moment('' + intNow, 'YYYYMMDD').add(-1, 'weeks').format('YYYYMMDD');\r\n            this.paramEndAt = +moment('' + intNow, 'YYYYMMDD').add(this.loadingMonths, 'months').format('YYYYMMDD');\r\n        }\r\n        this.showsProvider.getShows(this.paramStartAt, this.paramEndAt).subscribe(allshows => {\r\n            this.shows = [];\r\n            allshows.forEach(show => {\r\n                const extShow = <ExtShow>show;\r\n                if (show.date > intNow) {\r\n                    extShow.past = false;\r\n                } else {\r\n                    extShow.past = true;\r\n                }\r\n                this.shows.push(extShow);\r\n            });\r\n            this.runFilter();\r\n            this.setRegFlag();\r\n            this.allTypes.forEach(type => type.all = 0);\r\n            this.allLevels.forEach(lvl => lvl.all = 0);\r\n            this.allCountries.forEach(country => country.all = 0);\r\n            this.countAll();\r\n        }, err => console.log('Shows provider err: ' + err));\r\n    }\r\n\r\n    txtLoad() {\r\n        if (this.paramStartAt > 0) {\r\n            return \"load all\";\r\n        } else {\r\n            return \"load only range\";\r\n        }\r\n    }\r\n\r\n    userDataSubscription() {\r\n        this.authService.getUserdata().on('value', data => {\r\n            console.log('pokrenut authService getUserData');\r\n            let userdata: Userdata;\r\n            userdata = data.val();\r\n            if (userdata && userdata.usercountries) {\r\n                this.countries = userdata.usercountries;\r\n            }\r\n            this.runFilter();\r\n            if (userdata && userdata.admin) {\r\n                this.admin = userdata.admin;\r\n            } else {\r\n                this.admin = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    updateCountries() {\r\n        this.authService.updateUserCountries(this.countries);\r\n    }\r\n\r\n    checkAllCountries() {\r\n        this.countries = [];\r\n        this.allCountries.forEach(c => this.countries.push(c.code));\r\n    }\r\n\r\n    uncheckAllCountries() {\r\n        this.countries = [];\r\n    }\r\n\r\n    runFilter() {\r\n        const filterLevel = [];\r\n        this.selectedLevels.forEach(st => filterLevel.push(st.id));\r\n        this.processShows(this.shows.filter(show =>\r\n            filterLevel.includes(show.level) &&\r\n            this.selectedTypes.includes(show.type) &&\r\n            this.countries.includes(show.countrycode)\r\n        )\r\n        );\r\n    }\r\n\r\n    processShows(shows: ExtShow[]) {\r\n        this.monthshows = [];\r\n        this.markerClusters.clearLayers();\r\n        for (let i = 0; i < shows.length; i++) {\r\n            this.groupByMonth(shows[i]);\r\n            if ((typeof shows[i].lat === 'number') && (typeof shows[i].lon === 'number') && ((shows[i].lat + shows[i].lon) !== 0)) {\r\n                if (!shows[i].past) {\r\n                    this.addMarker(shows[i]);\r\n                }\r\n            }\r\n        }\r\n        this.mymap.addLayer(this.markerClusters);\r\n        if (this.markerClusters.getBounds().isValid()) {\r\n            this.mymap.fitBounds(this.markerClusters.getBounds());\r\n        }\r\n        this.countForSelectedTypes(shows);\r\n        this.countForSelectedLevels(shows);\r\n        this.countForSelectedCountries(shows);\r\n    }\r\n\r\n    groupByMonth(show: Show) {\r\n        const indexMnth = this.monthshows.findIndex(ms => ms.month === ('' + show.date).slice(0, 6));\r\n        if (indexMnth > -1) {\r\n            const indexMnf = this.monthshows[indexMnth].manifestations.findIndex(mnf => mnf.name === show.manifestation);\r\n            if (indexMnf > -1) {\r\n                this.monthshows[indexMnth].manifestations[indexMnf].shows.push(show);\r\n            } else {\r\n                this.monthshows[indexMnth].manifestations.push({ name: show.manifestation, shows: [show] });\r\n            }\r\n        } else {\r\n            this.monthshows.push({ month: ('' + show.date).slice(0, 6), manifestations: [{ name: show.manifestation, shows: [show] }] });\r\n        }\r\n    }\r\n\r\n    addMarker(show: ExtShow) {\r\n        if (!show.past) {\r\n            const icon = L.icon({ iconUrl: iconBaseUrl + 'show/' + show.level + '.svg' });\r\n            const marker = L.marker(new L.LatLng(show.lat, show.lon), { title: show.name, icon: icon });\r\n            marker.bindTooltip(this.intToDateToString(show.date, 'MMM YY'),\r\n                { permanent: true, offset: [0, 0], opacity: 0.4 });\r\n            marker.bindPopup('<div>' + show.name + '</div>'\r\n                + '<div>' + this.intToDateToString(show.date, 'LL') + '</div>'\r\n                + '<div>' + show.place + '</div>'\r\n            );\r\n            this.markerClusters.addLayer(marker);\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    countAll() {\r\n        for (let i = 0; i < this.shows.length; i++) {\r\n            // console.log(JSON.stringify(this.shows[i]));\r\n            if (!this.shows[i].past) {\r\n                const type = this.allTypes.find(type => type.name === this.shows[i].type);\r\n                if (type) {\r\n                    type.all++;\r\n                }\r\n                const sl = this.allLevels.find(level => level.id === this.shows[i].level);\r\n                if (sl) {\r\n                    sl.all++;\r\n                }\r\n                const c = this.allCountries.find(country => country.code === this.shows[i].countrycode);\r\n                if (c) {\r\n                    c.all++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    countForSelectedTypes(shows: ExtShow[]) {\r\n        this.allTypes.forEach(c => c.count = 0);\r\n        for (let i = 0; i < shows.length; i++) {\r\n            if (!shows[i].past) {\r\n                const c = this.allTypes.find(type => type.name === shows[i].type);\r\n                if (c) {\r\n                    c.count++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    countForSelectedLevels(shows: ExtShow[]) {\r\n        this.allLevels.forEach(sl => sl.count = 0);\r\n        for (let i = 0; i < shows.length; i++) {\r\n            if (!shows[i].past) {\r\n                const sl = this.allLevels.find(level => level.id === shows[i].level);\r\n                if (sl) {\r\n                    sl.count++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    countForSelectedCountries(shows: ExtShow[]) {\r\n        this.allCountries.forEach(c => c.count = 0);\r\n        for (let i = 0; i < shows.length; i++) {\r\n            if (!shows[i].past) {\r\n                const c = this.allCountries.find(country => country.code === shows[i].countrycode);\r\n                if (c) {\r\n                    c.count++;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getLevelName(id) {\r\n        const level = this.allLevels.find(t => t.id === id);\r\n        if (level) {\r\n            return level.description;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getFilterTypeHeader() {\r\n        return 'Types: ' + this.selectedTypes.length + ' of ' + this.allTypes.length;\r\n    }\r\n\r\n    getFilterLevelHeader() {\r\n        return 'Levels: ' + this.selectedLevels.length + ' of ' + this.allLevels.length;\r\n    }\r\n\r\n    getFilterCountryHeader() {\r\n        return 'Countries: ' + this.countries.length + ' of ' + this.allCountries.length;\r\n    }\r\n\r\n    setRegFlag() {\r\n        this.shows.forEach(show => show.regFlag = this.getRegFlag(show));\r\n    }\r\n\r\n    getRegFlag(show: ExtShow) {\r\n        let flag = 'open';\r\n\r\n        if (show.past) {\r\n            return 'finished';\r\n        }\r\n\r\n        if (!show.date) {\r\n            return '';\r\n        }\r\n\r\n        if (!show.regclosed) {\r\n            return '';\r\n        }\r\n\r\n        if (show.regclosed >= intNow) {\r\n            if (show.regclosed > intNow + 2) {\r\n                flag = 'open';\r\n            } else {\r\n                flag = 'lastminute';\r\n            }\r\n        } else {\r\n            flag = 'closed';\r\n        }\r\n\r\n        return flag;\r\n    }\r\n\r\n    getToolTip(show: ExtShow) {\r\n        switch (show.regFlag) {\r\n            case 'open':\r\n                return 'Registration opened until: ' + this.intToDateToString(show.regclosed, 'LL');\r\n            case 'lastminute':\r\n                return 'Registration opened until: ' + this.intToDateToString(show.regclosed, 'LL');\r\n            case 'closed':\r\n                return 'Registration closed on: ' + this.intToDateToString(show.regclosed, 'LL');\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    intToDateToString(intDate: number, format: string) {\r\n        if (moment('' + intDate, 'YYYYMMDD').isValid()) {\r\n            return moment('' + intDate, 'YYYYMMDD').format(format);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    addToManifestation(manifestation: { name: string, shows: Show[] }) {\r\n        if (manifestation.shows[0]) {\r\n            const show = {\r\n                'key': '',\r\n                'name': '',\r\n                'organizer': manifestation.shows[0].organizer,\r\n                'place': manifestation.shows[0].place,\r\n                'manifestation': manifestation.name,\r\n                'level': 1,\r\n                'type': 'General',\r\n                'countrycode': manifestation.shows[0].countrycode,\r\n                'link': manifestation.shows[0].link,\r\n                'date': manifestation.shows[0].date,\r\n                'regclosed': manifestation.shows[0].regclosed,\r\n                'lat': manifestation.shows[0].lat,\r\n                'lon': manifestation.shows[0].lon\r\n            };\r\n            this.router.navigate(['show'], { queryParams: { show: JSON.stringify(show) } });\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { Subject, forkJoin } from 'rxjs';\r\nimport { Show } from '../models/show';\r\nimport { ShowLevel } from '../models/showlevel';\r\nimport { Country } from '../models/country';\r\n\r\n@Injectable()\r\nexport class ShowsProvider {\r\n    public shows: Observable<Show[]>;\r\n    public statecode = new Subject<string>();\r\n    public showLevels: Observable<ShowLevel[]>;\r\n    public allCountries: Observable<Country[]>;\r\n\r\n\r\n    constructor(public db: AngularFireDatabase) {\r\n          this.shows = db.list<Show>('/shows', ref => ref.orderByChild('date')).valueChanges();\r\n          this.showLevels = db.list<ShowLevel>('/showlevel').valueChanges();\r\n          this.allCountries = db.list<Country>('/countries', ref => ref.orderByChild('name')).valueChanges();\r\n    }\r\n\r\n    public getShows(start: number, end: number){   \r\n        return this.db.list<Show>('/shows', ref => ref.orderByChild('date')\r\n                                                      .startAt(start)\r\n                                                      .endAt(end)\r\n                                                      ).valueChanges();\r\n    }\r\n\r\n}","import { FormControl } from '@angular/forms';\r\nimport * as moment from 'moment';\r\n\r\nexport class DateValidator {\r\n\r\n    static isValid(control: FormControl): any {\r\n        const d = moment(control.value, 'YYYYMMDD');\r\n        if (!d.isValid()) {\r\n            return {'invalid format': true};\r\n        } else {\r\n            if (d.year() < 2018 || d.year() > 2040) {\r\n                return {'invalid year': true};\r\n            }\r\n        }\r\n    return null;\r\n}\r\n}","import { FormControl } from '@angular/forms';\r\n\r\nexport class LatValidator {\r\n\r\n    static isValid(control: FormControl): any {\r\n\r\n        if (isNaN(control.value)) {\r\n            return {\r\n                'not a number': true\r\n            };\r\n        }\r\n\r\n\r\n        if ((control.value < -90) || (control.value > 90)) {\r\n            return {\r\n                'not realistic': true\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport class LonValidator {\r\n\r\n    static isValid(control: FormControl): any {\r\n\r\n        if (isNaN(control.value)) {\r\n            return {\r\n                'not a number': true\r\n            };\r\n        }\r\n\r\n\r\n        if ((control.value < -180) || (control.value > 180)) {\r\n            return {\r\n                'not realistic': true\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n      const isSubmitted = form && form.submitted;\r\n      return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n    }\r\n  }","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function ValidateUrl(control: AbstractControl) {\r\n  if (!control.value.startsWith('https') && !control.value.startsWith('http')) {\r\n    return { validUrl: true };\r\n  }\r\n  return null;\r\n}\r\n","export const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyCf6lecb7d201g5c4b27oVO5Uer5MI7l8c',\n    authDomain: 'showdogpro.firebaseapp.com',\n    databaseURL: 'https://showdogpro.firebaseio.com',\n    projectId: 'showdogpro',\n    storageBucket: 'showdogpro.appspot.com',\n    messagingSenderId: '424379315073'\n  },\n  googleMapConfig: {\n    apiKey: 'AIzaSyDDtxkjnMS-rXozS7c4q43JcmB0xNffplg'\n  }\n};\n\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}